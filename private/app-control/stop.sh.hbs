if [ "$(whoami)" != "root" ]; then
  echo "Stop script should be executed with root privileges."
  exit 1
fi

PROJECT="{{project}}"
APPNAME="{{appName}}"
INSTANCE="{{instance}}"
ETCD_CLUSTER="{{etcdCluster}}"
ETCD_INSTANCE_KEY="/instances/$PROJECT/$APPNAME/$INSTANCE"
TOTAL_STEPS=$((({{total}}*2)+1))
STEP=0

etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/state "stopping"
etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/totalSteps "$TOTAL_STEPS"
etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/progress "$STEP"

{{#each reverse services}}
  DOCKERNAME="{{service}}-$PROJECT-$INSTANCE"
  DOCKERNETNAME="net-$DOCKERNAME"
  DOCKERSSHDNAME="sshd-$DOCKERNAME"

  myip=$(docker exec $DOCKERNETNAME ifconfig eth1 | grep "inet addr:" | awk '{print $2}' | awk -F: '{print $2}')
  etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/stateDescription "Stopping network for {{service}}"
  STEP=$((STEP+1))
  etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/progress "$STEP" > /dev/null

  docker stop -t 5 $DOCKERNETNAME
  docker rm $DOCKERNETNAME

  etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/stateDescription "Stopping service {{service}}"
  etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/progress "$STEP"
  STEP=$((STEP+1))
  etcdctl --no-sync --peers $ETCD_CLUSTER set $ETCD_INSTANCE_KEY/meta_/progress "$STEP" > /dev/null
  docker stop -t 10 $DOCKERSSHDNAME
  docker rm $DOCKERSSHDNAME
  docker stop -t 30 $DOCKERNAME
  docker rm $DOCKERNAME

  etcdctl --no-sync --peers $ETCD_CLUSTER rm /skydns/ictu/$PROJECT/$INSTANCE/{{service}}

{{/each}}

etcdctl --no-sync --peers $ETCD_CLUSTER rm $ETCD_INSTANCE_KEY --recursive
